server.port=9003
spring.application.name=data-server

# 资源名称,Spring Security OAuth2 架构上分为Authorization Server和Resource Server。
# 我们可以为每一个Resource Server（一个微服务实例）设置一个resourceid。
# 再给client授权的时候，可以设置这个client可以访问哪一些微服务实例，如果没设置，就是对所有的resource都有访问权限。
resource.id=${spring.application.name}

#激活哪个配置文件
#spring.profiles.active=dev

#注册和拉取服务
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

#每间隔60s，向注册中心发送一次心跳，证明当前服务是可用状态
eureka.instance.lease-renewal-interval-in-seconds=60

#告诉注册中心，如果当前服务60s之内没有发送心跳，就代表服务停止,将服务从注册中心服务列表中踢出掉
eureka.instance.lease-expiration-duration-in-seconds=60

#注册中心地址
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:8761/eureka/

#redis配置
spring.redis.database=0
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=
spring.redis.pool.max-active=300
spring.redis.pool.max-wait=-1
spring.redis.pool.max-idle=80
spring.redis.pool.min-idle=10
spring.redis.timeout=0

#配置mysql数据源
spring.datasource.url = jdbc:mysql://192.168.123.147:3306/oauth2?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&pinGlobalTxToPhysicalConnection=true
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.driverClassName = com.mysql.jdbc.Driver

#mybatis配置
mybatis.type-aliases-package=com.**.entity
mybatis.mapper-locations=classpath:mybatis/mapper/**/*.xml
mybatis.config-location=classpath:mybatis/mybatis-config.xml

#oauth2配置,必须配置此配置在资源服务器上,否则token验证不通过
security.oauth2.resource.user-info-uri=http://localhost:9002/app/auth/users/current
security.oauth2.resource.prefer-token-info=false

#打印sql
debug = true
logging.level.root = INFO
logging.level.com.cloud = debug
