<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.auth.authserver.dao.inft.ISysUserDao">
    <resultMap id="BaseResultMap" type="com.cloud.auth.authserver.entity.SysUser">
		<result column="su_id" jdbcType="BIGINT" property="suId" />
		<result column="sd_id" jdbcType="BIGINT" property="sdId" />
		<result column="account" jdbcType="VARCHAR" property="account" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="sex" jdbcType="TINYINT" property="sex" />
		<result column="birthday" jdbcType="DATE" property="birthday" />
		<result column="create_time" jdbcType="DATE" property="createTime" />
		<result column="status" jdbcType="TINYINT" property="status" />
		<result column="status_time" jdbcType="DATE" property="statusTime" />
    </resultMap>

    <sql id="where_sql">
        and 1=1
	    <if test="suId != null">
	       and su_id = #{suId,jdbcType=BIGINT}
	    </if>
	    <if test="sdId != null">
	       and sd_id = #{sdId,jdbcType=BIGINT}
	    </if>
	    <if test="account != null">
	      <if test="accountEqual != null and accountEqual">
	         and account = #{account,jdbcType=VARCHAR}
	      </if>
	      <if test="accountEqual != null and not accountEqual">
	         <![CDATA[and account like CONCAT('%',#{account,jdbcType=VARCHAR} ,'%')]]>
	      </if>
	    </if>
	    <if test="password != null">
	      <if test="passwordEqual != null and passwordEqual">
	         and password = #{password,jdbcType=VARCHAR}
	      </if>
	      <if test="passwordEqual != null and not passwordEqual">
	         <![CDATA[and password like CONCAT('%',#{password,jdbcType=VARCHAR} ,'%')]]>
	      </if>
	    </if>
	    <if test="phone != null">
	      <if test="phoneEqual != null and phoneEqual">
	         and phone = #{phone,jdbcType=VARCHAR}
	      </if>
	      <if test="phoneEqual != null and not phoneEqual">
	         <![CDATA[and phone like CONCAT('%',#{phone,jdbcType=VARCHAR} ,'%')]]>
	      </if>
	    </if>
	    <if test="email != null">
	      <if test="emailEqual != null and emailEqual">
	         and email = #{email,jdbcType=VARCHAR}
	      </if>
	      <if test="emailEqual != null and not emailEqual">
	         <![CDATA[and email like CONCAT('%',#{email,jdbcType=VARCHAR} ,'%')]]>
	      </if>
	    </if>
	    <if test="sex != null">
	       and sex = #{sex,jdbcType=TINYINT}
	    </if>
	    <if test="birthdayStart != null">
	       and birthday &gt;= #{birthdayStart,jdbcType=DATE}
	    </if>
	    <if test="birthdayEnd != null">
	       and #{birthdayEnd,jdbcType=DATE} &gt;= birthday
	    </if>
	    <if test="createTimeStart != null">
	       and create_time &gt;= #{createTimeStart,jdbcType=DATE}
	    </if>
	    <if test="createTimeEnd != null">
	       and #{createTimeEnd,jdbcType=DATE} &gt;= create_time
	    </if>
	    <if test="status != null">
	       and status = #{status,jdbcType=TINYINT}
	    </if>
	    <if test="statusTimeStart != null">
	       and status_time &gt;= #{statusTimeStart,jdbcType=DATE}
	    </if>
	    <if test="statusTimeEnd != null">
	       and #{statusTimeEnd,jdbcType=DATE} &gt;= status_time
	    </if>
        <if test="inSql != null and inSql.size()>0">
            <foreach collection="inSql" item="intervalEntity" separator=" ">
                and ${intervalEntity.name} in
                <foreach collection="intervalEntity.list" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="notInSql != null and notInSql.size()>0">
            <foreach collection="notInSql" item="intervalEntity" separator=" ">
                and ${intervalEntity.name} not in
                <foreach collection="intervalEntity.list" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
    </sql>

    <sql id="Example_Where_Clause">
      <foreach collection="criterias" item="criteria" separator=" ">
        <if test="criteria.valid">
            ${criteria.opt}
            <trim prefix="(" prefixOverrides="and|or" suffix=")">
                <foreach collection="criteria.criterions" item="criterion">
                  <choose>
                    <when test="criterion.noValue">
                        ${criterion.condition}
                    </when>
                    <when test="criterion.oneValue">
                        ${criterion.condition} #{criterion.value1}
                    </when>
                    <when test="criterion.secondValue">
                        ${criterion.condition} #{criterion.value1} and #{criterion.value2}
                    </when>
                    <when test="criterion.listValue">
                        ${criterion.condition}
                      <foreach collection="criterion.list" item="listItem" open="(" close=")" separator=",">
                        #{listItem}
                      </foreach>
                    </when>
                  </choose>
                </foreach>
            </trim>
        </if>
      </foreach>
   </sql>

    <sql id="Base_Column_List">
        su_id,sd_id,account,password,phone,
		email,sex,birthday,create_time,status,
		status_time
    </sql>

    <sql id="Base_Object_List">
        #{suId},#{sdId},#{account},#{password},#{phone},
		#{email},#{sex},#{birthday},#{createTime},#{status},
		#{statusTime}
    </sql>

    <sql id="Base_Item_List">
        #{item.suId},#{item.sdId},#{item.account},#{item.password},#{item.phone},
		#{item.email},#{item.sex},#{item.birthday},#{item.createTime},#{item.status},
		#{item.statusTime}
    </sql>

     <!--获取最大的主键-->
    <select id="selectMaxSysUserId" resultType="java.lang.Long">
        select IFNULL(max(su_id), 0) from `sys_user`
    </select>

    <!--根据主键获取对象-->
    <select id="loadSysUserByKey" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from sys_user
        <where>
            AND su_id=#{suId}
        </where>
    </select>

    <!--插入对象-->
    <insert id="insertSysUser">
        insert into sys_user(<include refid="Base_Column_List" />)
        values(<include refid="Base_Object_List" />)
    </insert>

    <!--批量插入对象-->
    <insert id="insertSysUserList">
        insert into sys_user(<include refid="Base_Column_List" />)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (<include refid="Base_Item_List" />)
        </foreach>
    </insert>

    <!--更新对象-->
    <update id="updateSysUser">
        update sys_user
        <set>
			<if test="sdId != null">
				sd_id = #{sdId},
			</if>
			<if test="account != null">
				account = #{account},
			</if>
			<if test="password != null">
				password = #{password},
			</if>
			<if test="phone != null">
				phone = #{phone},
			</if>
			<if test="email != null">
				email = #{email},
			</if>
			<if test="sex != null">
				sex = #{sex},
			</if>
			<if test="birthday != null">
				birthday = #{birthday},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="statusTime != null">
				status_time = #{statusTime},
			</if>
        </set>
        <where>
            AND su_id=#{suId}
        </where>
    </update>

    <!--批量更新对象-->
    <update id="updateSysUserList">
        <foreach collection="list" separator=";" item="item">
            update sys_user
            <set>
				<if test="item.sdId != null">
					sd_id = #{item.sdId},
				</if>
				<if test="item.account != null">
					account = #{item.account},
				</if>
				<if test="item.password != null">
					password = #{item.password},
				</if>
				<if test="item.phone != null">
					phone = #{item.phone},
				</if>
				<if test="item.email != null">
					email = #{item.email},
				</if>
				<if test="item.sex != null">
					sex = #{item.sex},
				</if>
				<if test="item.birthday != null">
					birthday = #{item.birthday},
				</if>
				<if test="item.createTime != null">
					create_time = #{item.createTime},
				</if>
				<if test="item.status != null">
					status = #{item.status},
				</if>
				<if test="item.statusTime != null">
					status_time = #{item.statusTime},
				</if>
            </set>
            <where>
                AND su_id=#{item.suId}
            </where>
        </foreach>
    </update>

    <!--更新对象:全更新-->
    <update id="fullUpdateSysUser">
        update sys_user
        <set>
			sd_id = #{sdId},
			account = #{account},
			password = #{password},
			phone = #{phone},
			email = #{email},
			sex = #{sex},
			birthday = #{birthday},
			create_time = #{createTime},
			status = #{status},
			status_time = #{statusTime},
        </set>
        <where>
            AND su_id=#{suId}
        </where>
    </update>

    <!--批量更新对象:全更新-->
    <update id="fullUpdateSysUserList">
        <foreach collection="list" separator=";" item="item">
            update sys_user
            <set>
				sd_id = #{item.sdId},
				account = #{item.account},
				password = #{item.password},
				phone = #{item.phone},
				email = #{item.email},
				sex = #{item.sex},
				birthday = #{item.birthday},
				create_time = #{item.createTime},
				status = #{item.status},
				status_time = #{item.statusTime},
            </set>
            <where>
                AND su_id=#{item.suId}
            </where>
        </foreach>
    </update>

    <!--查询总数-->
    <select id="getSysUserCount" resultType="java.lang.Long">
        select count(*) from sys_user
        <where>
            <include refid="where_sql" />
        </where>
    </select>

    <!--查询和分页查询,区别在于page和pageSize是否为空-->
    <select id="getSysUserList" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from sys_user
        <where>
            <include refid="where_sql" />
        </where>
        <if test="page!=null and pageSize!=null and page!=-1" >
            limit #{index},#{pageSize}
        </if>
        <if test="orderByClause!=null and orderByClause!=''">
            order by ${orderByClause}
        </if>
    </select>

    <!--复杂查询获取总数-->
    <select id="getSysUserCountExample" resultType="java.lang.Long">
        select count(*) from sys_user
        <where>
            <include refid="Example_Where_Clause" />
        </where>
    </select>

    <!--复杂查询查询列表-->
    <select id="getSysUserListExample" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from sys_user
        <where>
            <include refid="Example_Where_Clause" />
        </where>
        <if test="page!=null and pageSize!=null and page!=-1" >
            limit #{index},#{pageSize}
        </if>
        <if test="orderByClause!=null and orderByClause!=''">
            order by ${orderByClause}
        </if>
    </select>

    <!--根据主键删除对象-->
    <delete id="deleteSysUserByKey">
        delete from sys_user
        <where>
            AND su_id = #{suId}
        </where>
    </delete>

    <!-- 批量删除对象 -->
    <delete id="deleteSysUserList">
        delete from sys_user
        <where>
            su_id in
            <foreach collection="list" open="(" close=")" separator="," item="item">
                #{item.suId}
            </foreach>
        </where>
    </delete>

    <!--根据ID列表获取记录列表-->
    <select id="findSysUserListByIds" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from sys_user
        <where>
            su_id in
            <foreach collection="list" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </where>
    </select>

</mapper>

