<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.auth.authserver.dao.inft.ISysDeptRoleDao">
    <resultMap id="BaseResultMap" type="com.cloud.auth.authserver.entity.SysDeptRole">
		<result column="sdr_id" jdbcType="BIGINT" property="sdrId" />
		<result column="sd_id" jdbcType="BIGINT" property="sdId" />
		<result column="sr_id" jdbcType="BIGINT" property="srId" />
		<result column="create_time" jdbcType="DATE" property="createTime" />
		<result column="status" jdbcType="TINYINT" property="status" />
		<result column="status_time" jdbcType="DATE" property="statusTime" />
    </resultMap>

    <sql id="where_sql">
        and 1=1
	    <if test="sdrId != null">
	       and sdr_id = #{sdrId,jdbcType=BIGINT}
	    </if>
	    <if test="sdId != null">
	       and sd_id = #{sdId,jdbcType=BIGINT}
	    </if>
	    <if test="srId != null">
	       and sr_id = #{srId,jdbcType=BIGINT}
	    </if>
	    <if test="createTimeStart != null">
	       and create_time &gt;= #{createTimeStart,jdbcType=DATE}
	    </if>
	    <if test="createTimeEnd != null">
	       and #{createTimeEnd,jdbcType=DATE} &gt;= create_time
	    </if>
	    <if test="status != null">
	       and status = #{status,jdbcType=TINYINT}
	    </if>
	    <if test="statusTimeStart != null">
	       and status_time &gt;= #{statusTimeStart,jdbcType=DATE}
	    </if>
	    <if test="statusTimeEnd != null">
	       and #{statusTimeEnd,jdbcType=DATE} &gt;= status_time
	    </if>
        <if test="inSql != null and inSql.size()>0">
            <foreach collection="inSql" item="intervalEntity" separator=" ">
                and ${intervalEntity.name} in
                <foreach collection="intervalEntity.list" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="notInSql != null and notInSql.size()>0">
            <foreach collection="notInSql" item="intervalEntity" separator=" ">
                and ${intervalEntity.name} not in
                <foreach collection="intervalEntity.list" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
    </sql>

    <sql id="Example_Where_Clause">
      <foreach collection="criterias" item="criteria" separator=" ">
        <if test="criteria.valid">
            ${criteria.opt}
            <trim prefix="(" prefixOverrides="and|or" suffix=")">
                <foreach collection="criteria.criterions" item="criterion">
                  <choose>
                    <when test="criterion.noValue">
                        ${criterion.condition}
                    </when>
                    <when test="criterion.oneValue">
                        ${criterion.condition} #{criterion.value1}
                    </when>
                    <when test="criterion.secondValue">
                        ${criterion.condition} #{criterion.value1} and #{criterion.value2}
                    </when>
                    <when test="criterion.listValue">
                        ${criterion.condition}
                      <foreach collection="criterion.list" item="listItem" open="(" close=")" separator=",">
                        #{listItem}
                      </foreach>
                    </when>
                  </choose>
                </foreach>
            </trim>
        </if>
      </foreach>
   </sql>

    <sql id="Base_Column_List">
        sdr_id,sd_id,sr_id,create_time,status,
		status_time
    </sql>

    <sql id="Base_Object_List">
        #{sdrId},#{sdId},#{srId},#{createTime},#{status},
		#{statusTime}
    </sql>

    <sql id="Base_Item_List">
        #{item.sdrId},#{item.sdId},#{item.srId},#{item.createTime},#{item.status},
		#{item.statusTime}
    </sql>

     <!--获取最大的主键-->
    <select id="selectMaxSysDeptRoleId" resultType="java.lang.Long">
        select IFNULL(max(sdr_id), 0) from `sys_dept_role`
    </select>

    <!--根据主键获取对象-->
    <select id="loadSysDeptRoleByKey" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from sys_dept_role
        <where>
            AND sdr_id=#{sdrId}
        </where>
    </select>

    <!--插入对象-->
    <insert id="insertSysDeptRole">
        insert into sys_dept_role(<include refid="Base_Column_List" />)
        values(<include refid="Base_Object_List" />)
    </insert>

    <!--批量插入对象-->
    <insert id="insertSysDeptRoleList">
        insert into sys_dept_role(<include refid="Base_Column_List" />)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (<include refid="Base_Item_List" />)
        </foreach>
    </insert>

    <!--更新对象-->
    <update id="updateSysDeptRole">
        update sys_dept_role
        <set>
			<if test="sdId != null">
				sd_id = #{sdId},
			</if>
			<if test="srId != null">
				sr_id = #{srId},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="statusTime != null">
				status_time = #{statusTime},
			</if>
        </set>
        <where>
            AND sdr_id=#{sdrId}
        </where>
    </update>

    <!--批量更新对象-->
    <update id="updateSysDeptRoleList">
        <foreach collection="list" separator=";" item="item">
            update sys_dept_role
            <set>
				<if test="item.sdId != null">
					sd_id = #{item.sdId},
				</if>
				<if test="item.srId != null">
					sr_id = #{item.srId},
				</if>
				<if test="item.createTime != null">
					create_time = #{item.createTime},
				</if>
				<if test="item.status != null">
					status = #{item.status},
				</if>
				<if test="item.statusTime != null">
					status_time = #{item.statusTime},
				</if>
            </set>
            <where>
                AND sdr_id=#{item.sdrId}
            </where>
        </foreach>
    </update>

    <!--更新对象:全更新-->
    <update id="fullUpdateSysDeptRole">
        update sys_dept_role
        <set>
			sd_id = #{sdId},
			sr_id = #{srId},
			create_time = #{createTime},
			status = #{status},
			status_time = #{statusTime},
        </set>
        <where>
            AND sdr_id=#{sdrId}
        </where>
    </update>

    <!--批量更新对象:全更新-->
    <update id="fullUpdateSysDeptRoleList">
        <foreach collection="list" separator=";" item="item">
            update sys_dept_role
            <set>
				sd_id = #{item.sdId},
				sr_id = #{item.srId},
				create_time = #{item.createTime},
				status = #{item.status},
				status_time = #{item.statusTime},
            </set>
            <where>
                AND sdr_id=#{item.sdrId}
            </where>
        </foreach>
    </update>

    <!--查询总数-->
    <select id="getSysDeptRoleCount" resultType="java.lang.Long">
        select count(*) from sys_dept_role
        <where>
            <include refid="where_sql" />
        </where>
    </select>

    <!--查询和分页查询,区别在于page和pageSize是否为空-->
    <select id="getSysDeptRoleList" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from sys_dept_role
        <where>
            <include refid="where_sql" />
        </where>
        <if test="page!=null and pageSize!=null and page!=-1" >
            limit #{index},#{pageSize}
        </if>
        <if test="orderByClause!=null and orderByClause!=''">
            order by ${orderByClause}
        </if>
    </select>

    <!--复杂查询获取总数-->
    <select id="getSysDeptRoleCountExample" resultType="java.lang.Long">
        select count(*) from sys_dept_role
        <where>
            <include refid="Example_Where_Clause" />
        </where>
    </select>

    <!--复杂查询查询列表-->
    <select id="getSysDeptRoleListExample" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from sys_dept_role
        <where>
            <include refid="Example_Where_Clause" />
        </where>
        <if test="page!=null and pageSize!=null and page!=-1" >
            limit #{index},#{pageSize}
        </if>
        <if test="orderByClause!=null and orderByClause!=''">
            order by ${orderByClause}
        </if>
    </select>

    <!--根据主键删除对象-->
    <delete id="deleteSysDeptRoleByKey">
        delete from sys_dept_role
        <where>
            AND sdr_id = #{sdrId}
        </where>
    </delete>

    <!-- 批量删除对象 -->
    <delete id="deleteSysDeptRoleList">
        delete from sys_dept_role
        <where>
            sdr_id in
            <foreach collection="list" open="(" close=")" separator="," item="item">
                #{item.sdrId}
            </foreach>
        </where>
    </delete>

    <!--根据ID列表获取记录列表-->
    <select id="findSysDeptRoleListByIds" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from sys_dept_role
        <where>
            sdr_id in
            <foreach collection="list" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </where>
    </select>

</mapper>

